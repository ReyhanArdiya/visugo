rules_version = '2';

service cloud.firestore {
    match /databases/{database}/documents {
        function isAuth() {
            return request.auth != null;
        }

        // TEST
        match /{doc=**}/DEVELOPMENT_TESTING_COLLECTION_ID/{devDoc} {
            allow read, write: if true;
        }

        match /users/{userId} {
            allow read, write: if isAuth();

            // This match is for when we access a SINGLE listings collection
            match /listings/{listingId} {
                function isSameUser() {
                    return request.auth.uid == get(resource.data.seller).data.uid;
                }

                function hasAllFields() {
                    let fields = request.resource.data.keys();
                    let requiredFields = ["seller", "title", "description", "image", "created"];

                    return fields.hasAll(requiredFields) && fields.hasOnly(requiredFields);
                }
            allow read: if true;
                allow create: if isAuth() && hasAllFields();
                allow delete, update: if isAuth() && isSameUser();
            }
        }

        // This match is for when we access listings as CollectionGroup query
        match /{path=**}/listings/{listingId} {
            allow read: if true;
        }
    }
}